name: CI

on:
  push:
    branches: [master]
    paths-ignore:
      - "README.md"
      - "SECURITY.md"
      - "CONTRIBUTING.md"
      - "CODE_OF_CONDUCT.md"
      - "LICENSE"
      - ".gitignore"

  pull_request:
    branches: [master]

jobs:
  check-secrets:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    outputs:
      github-token: ${{ steps.github-token.outputs.defined }}
    steps:
      - id: github-token
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: "${{ env.GITHUB_TOKEN != '' }}"
        run: echo "::set-output name=defined::true"

  test-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: wagoid/commitlint-github-action@v4

  pre-tests:
    name: Install dependencies (if needed)
    runs-on: ubuntu-latest
    needs: [check-secrets, test-commit]
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: Manage cache
        uses: actions/cache@v2.1.7
        with:
          path: |
            ./node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('.github/workflows/*.yml') }}
          restore-keys: |
            ${{ runner.OS }}-build-${{ hashFiles('**/package-lock.json') }}
            ${{ runner.OS }}-build

      - name: Install deps
        run: make dependencies

  publish:
    name: Publish a new version of package via Semantic Release
    needs: [pre-tests]
    timeout-minutes: 5
    if: ${{ github.ref == 'refs/heads/master' }}

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: Manage cache
        uses: actions/cache@v2.1.7
        with:
          path: |
            ./node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('.github/workflows/*.yml') }}
          restore-keys: |
            ${{ runner.OS }}-build-${{ hashFiles('**/package-lock.json') }}
            ${{ runner.OS }}-build

      - name: Prepare token
        working-directory: ./application-builder
        run: echo "//npm.pkg.github.com/:_authToken=${GH_TOKEN}" >> .npmrc
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Build project
        run: make build && make release

      - name: Semantic release
        working-directory: ./application-builder
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: npx semantic-release
